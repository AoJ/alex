= Alex dependencies =

This README describes all dependencies required by the Alex project.

The Alex project is developed in Python and tested with version 2.7.
It may be necessary to have exactly this version of Python for the project
to work correctly.

If it is needed then you can use https://github.com/akheron/multipy to install
the 2.7 version.

== Ubuntu 12.04 ==

Ask the root on the computer to run:

sudo apt-get install gfortran libatlas-base-dev portaudio19-dev flac speex sox mplayer libsqlite3-dev python-wxgtk2.8

To get latest versions of some python packages, I recommend to run these commands:

sudo pip install --upgrade numpy     # We require 1.7.1
sudo pip install --upgrade scipy
sudo pip install --upgrade scikit-learn
sudo pip install --upgrade wxpython
sudo pip install --upgrade matplotlib

sudo pip install --upgrade pysqlite
sudo pip install --upgrade sqlalchemy
sudo pip install --upgrade pyga
sudo pip install --upgrade python-Levenshtein
sudo pip install --upgrade boto
sudo pip install --upgrade pysox
sudo pip install --upgrade jinja2
sudo easy_install wget
sudo easy_install pymad
sudo easy_install ipdb


== Ubuntu 10.04 ==

Ask the root on the computer to run:

sudo apt-get install gfortran flac libsqlite3-dev libatlas-base-dev


If you need optimised ATLAS and LAPACK libraries then you have to compile them on your own.
Then modify config for numpy. Optimised ATLAS and LAPACK can compute matrix multiplication on all cpu cores available.

To build your own optimised ATLAS and LAPACK librararies:
    - get latest LAPACK
    - get latest ATLAS
    - compile lapack
    - tell atlas where is your compiled LAPACK
    - compile ATLAS

When having your own compiled version of python then remember that sometimes you have to recompile the Python installation when
adding packages or modules, e.g. when libsqlite3-dev is installed.

== Local versions of Python packages ==

Most of the packages are in alex/thirparty/installable to provide packages
Alex is tested with.

numpy
  - download latest numpy
  - unpack
  - got to main directory
  - tell numpy where is atlas and lapack if you have your own compiled
  - run

    $ python setup.py install

scipy
  - download latest scipy
  - unpack
  - got to main directory
  - run

    $ python setup.py install

scikit-learn
  pip install --upgrade scikit-learn

python-Levenshtein
  pip install --upgrade python-Levenshtein

pyAudio
  - get a special version from https://github.com/bastibe/PyAudio
      (bastibe-PyAudio-2a08fa7)
  - this version supports non-blocking audio
  - run

    $ python ./setup.py install

pymad
  pip install --upgrade pymad

pysqllite
  pip install --upgrade pysqlite

pyga
  pip install --upgrade pyga

== Source compiled packages ==

flite
  - get the lates flite
  - build flite:

    $ bunzip2 flite-1.4-release.tar.bz2
    $ tar -xvf flite-1.4-release.tar
    $ cd flite-1.4-release
    $ ./configure
    $ make

   - put flite-1.4-release/bin/flite into you search path.
       E.g. link the flite program to your bin directory

pjsip
  - get the latest pjsip
  - build pjsip

    $ bunzip2 pjproject-2.1.tar.bz2
    $ tar -xvf pjproject-2.1.tar
    $ cd pjproject-2.1
    $ ./configure CXXFLAGS=-fPIC CFLAGS=-fPIC LDFLAGS=-fPIC CPPFLAGS=-fPIC
    $ make dep
    $ make
    $ make install

  - install python pysuaxt
  - copy or simply link the following files from the directory alex/thirdparty/installable/py_pjsuaxt

      _pjsuaxt.c
      _pjsuaxt.def
      _pjsuaxt.h
      pjsuaxt.py
      setup-pjsuaxt.py

  - to the directory (your-path)/pjproject-2.1/pjsip-apps/src/python/
  - then go to that directory (your-path)/pjproject-2.1/pjsip-apps/src/python/ and run

    $ python setup-pjsuaxt.py install

  - this will install extended pjsua library which support in memory playing and recording of calls

HTK
  - get the latest HTK (3.4.1 tested) from http://htk.eng.cam.ac.uk/download.shtml
  - build and install the HTK

SRILM
  - get the latest SRILM (1.6 tested) from http://www.speech.sri.com/projects/srilm/
  - build and install the SRILM

Julius
  - get the latest Julius ASR decoder (4.2.2 tested - 4.2.1 generates seg faults) from http://julius.sourceforge.jp/en_index.php
  - build and install
  - patch the julius with alex/thirdparty/installable/julius/*.path

  - ./configure


