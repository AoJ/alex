#!/usr/bin/env python
# vim: set filetype=python fileencoding=UTF-8:

#  When the configure file is loaded several automatic transformations are applied.
#    1) '{cfg_abs_path}' at the beginning of strings is replaced by an absolute path of the configure files.
#                        This can be used to make the configure file independent of the location of programs
#                        using the configure file.

from alex.utils.config import as_project_path

config = {
  'SLU': {
    'debug': True,
    # DEPRECATED
    # 'cldb': "{cfg_abs_path}/../applications/CamInfoRest/data/database.py",
    # 'type': 'DAILogRegClassifier',
    # 'DAILogRegClassifier': {
        # # 'model': '{cfg_abs_path}/../applications/CamInfoRest/slu-lr-trn.model',
        # 'model': '{cfg_abs_path}/../applications/CamInfoRest/models/130516_minf60-minfc35-mind60.slu_model.gz',
    # },
    # Type of the classifier:
    #   'cl-seq' ... the original classifier with category label
    #                abstraction, with sequential numbering of category
    #                labels
    #   'cl-tracing' ... category label substitution with tracing the
    #                original surface string and substituting it back
    #                adaptively based on the classifier instantiation
    #                applied
    'type': 'cl-tracing',
    'cl-tracing': {
        'cldb_fname': os.path.join('{cfg_abs_path}', '..', 'applications',
                                   'CamInfoRest', 'data', 'database.py'),
        'features_type': ('ngram', ),
        'do_preprocessing': True,
        # 'clser': <a trained DAI classifier object>
        'testing': {
            # 'model_fname': <specify one>,
            'model_fname': os.path.join(
                '{cfg_abs_path}', '..', 'applications', 'CamInfoRest',
                'models', '130516_minf60-minfc35-mind60.slu_model.gz'),
            'max_examples': None,
            'min_perc': 80,
            'renormalise': True,   # Whether to normalise probabilities for
                                   # alternative values for same slots.
            'threshold': None,     # set to None to use the learned one
            'vanilla': True,       # set to True if no output files should be
                                   # written
        }
    }
  },
  'DM': {
    'debug': True,
    'type': 'UfalRuleDM',
    'token_url': 'http://SECRET/~zilka/eval/2012-12-14-cir-ruledm/new_token.py?data={0}',
    'Dummy': {
        'debug': True,
    },
    'UfalRuleDM': {
      'db_cfg': as_project_path('applications/CamInfoRest/cued_data/CIRdbase_V7_noloc.txt'),
      'ontology': as_project_path('applications/CamInfoRest/ontology.cfg'),
      'provide_code': True,
    },
    'PUfalRuleDM': {
      'db_cfg': as_project_path('applications/CamInfoRest/cued_data/CIRdbase_V7_noloc.txt'),
      'ontology': as_project_path('applications/CamInfoRest/ontology.cfg'),
      'provide_code': False,
      'code_submit_url': None
    }
  },
  'NLG': {
    'debug': True,
    'type': 'Template',
    'Template' : {
        'model': as_project_path('applications/CamInfoRest/nlgtemplates.cfg')
    },
  },
  'TTS': {
    'debug': True,
    'type': 'Flite',

  }
}
